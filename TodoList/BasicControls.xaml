<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <system:Double x:Key="BigFont">16</system:Double>
    <system:Double x:Key="SmallFont">14</system:Double>

    <Style TargetType="Label" x:Key="HeaderLabelStyle">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="{StaticResource BigFont}"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TextTaskStyle">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="{StaticResource SmallFont}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="DatePicker" x:Key="DatePickerTaskStyle">
        <Setter Property="FontSize" Value="{StaticResource SmallFont}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style TargetType="ComboBox" x:Key="CbxTaskStyle">
        <Setter Property="FontSize" Value="{StaticResource SmallFont}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,3,10,3"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <!--<Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
                <Grid>
                    <Border x:Name="border" Background="Lavender"  BorderBrush="DimGray" BorderThickness="2" CornerRadius="10">
                            <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" Margin="5">
                                <DockPanel>
                                    <ContentPresenter Content="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" Margin="5"/>
                                </DockPanel>
                            </ToggleButton>
                    </Border>
                </Grid>
            </ControlTemplate>
        </Setter.Value>
    </Setter>-->
    </Style>

    <Style TargetType="Button" x:Key="BtnTaskStyle">
        <Setter Property="FontSize" Value="{StaticResource SmallFont}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="Lavender"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10">
                        <DockPanel>
                            <Label Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="{StaticResource BigFont}" FontWeight="DemiBold"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="BtnMainStyle">
        <Setter Property="FontSize" Value="{StaticResource SmallFont}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="AliceBlue"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10">
                        <DockPanel>
                            <Label Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="{StaticResource BigFont}" FontWeight="DemiBold"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>